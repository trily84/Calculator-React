{"version":3,"sources":["button.jsx","display.jsx","App.js","reportWebVitals.js","index.js"],"names":["Buttons","props","handleClick","id","className","onClick","Display","display","App","state","bind","updateDisplay","calculate","firstOperand","waitingForSecondOperand","operator","secondOperand","this","setState","digit","console","log","input","parseFloat","isNaN","result","String","includes","event","target","inputDigit","innerHTML","inputDecimal","inputOperator","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9367d493.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction Buttons(props) {\n  const {handleClick} = props\n  return (  \n    <div>\n      <div id=\"button-area\">\n       <button className=\"operator\" id=\"add\" onClick={handleClick}>+</button>\n       <button className=\"operator\" id=\"subtract\" onClick={handleClick}>-</button>\n       <button className=\"operator\" id=\"multiply\" onClick={handleClick}>*</button>\n       <button className=\"operator\" id=\"divide\" onClick={handleClick}>/</button>\n       <button className=\"digit\" id=\"one\" onClick={handleClick}>1</button>\n       <button className=\"digit\" id=\"two\" onClick={handleClick}>2</button>\n       <button className=\"digit\" id=\"three\" onClick={handleClick}>3</button>\n       <button className=\"digit\" id=\"four\" onClick={handleClick}>4</button>\n       <button className=\"digit\" id=\"five\" onClick={handleClick}>5</button>\n       <button className=\"digit\" id=\"six\" onClick={handleClick}>6</button>\n       <button className=\"digit\" id=\"seven\" onClick={handleClick}>7</button>\n       <button className=\"digit\" id=\"eight\" onClick={handleClick}>8</button>\n       <button className=\"digit\" id=\"nine\" onClick={handleClick}>9</button>\n       <button className=\"digit\" id=\"zero\" onClick={handleClick}>0</button>\n       <button className=\"decimal\" id=\"decimal\" onClick={handleClick}>.</button>\n       <button className=\"clear\" id=\"clear\" onClick={handleClick}>AC</button>\n    </div>\n    <div className=\"equals\">\n       <button className=\"operator\" id=\"equals\" onClick={handleClick}>=</button>\n    </div>\n\n    </div>\n  );\n}\n\nexport default Buttons;\n","import React from 'react';\nimport './App.css';\n\nfunction Display(props) {\n  return (  \n    <div>\n    <div id=\"display\">{props.display}</div>\n    {/* <div id=\"result\">{props.result}</div> */}\n    </div>\n  );\n}\n\nexport default Display;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Buttons from \"./button.jsx\";\nimport Display from \"./display.jsx\";\n\nclass App extends Component {\n  state = {\n    display: \"0\",\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n    this.updateDisplay = this.updateDisplay.bind(this)\n    this.calculate = this.calculate.bind(this)\n    this.display = \"0\"\n    this.firstOperand = \"0\"\n    this.waitingForSecondOperand = false\n    this.operator = null\n  }\n\n  calculate(firstOperand, secondOperand, operator) {\n    if (operator === '+') {\n      return firstOperand + secondOperand;\n    } else if (operator === '-') {\n      return firstOperand - secondOperand;\n    } else if (operator === '*') {\n      return firstOperand * secondOperand;\n    } else if (operator === '/') {\n      return firstOperand / secondOperand;\n    }\n  \n    return secondOperand;\n  }\n\n  updateDisplay() {\n    this.setState({\n      display: this.display,\n    });\n  }\n  \n  inputDigit(digit) {\n    if (!this.waitingForSecondOperand) {\n      this.display === \"0\" ? this.display = digit : this.display += digit\n      console.log(\"waitingForSecondOperand:\", this.waitingForSecondOperand)\n    }\n    else if (this.waitingForSecondOperand) {\n      if (this.display === \"-\") {\n        this.display += digit\n        console.log(this.display)\n      }\n      else {\n        this.display = digit\n      }\n      this.waitingForSecondOperand = false\n      console.log(\"waitingForSecondOperand:\", this.waitingForSecondOperand)\n    }\n  }\n\n  inputOperator(operator) {\n    const input = parseFloat(this.display)\n    if (this.firstOperand === \"0\" && !isNaN(input)) {\n      // Update the firstOperand property\n      this.firstOperand = input\n      this.operator = operator\n    }\n\n    // In case multiple operators in a row\n    else if (this.operator && this.waitingForSecondOperand) {\n      if (operator === \"-\" && this.operator !== \"=\") {\n        this.display = \"-\" \n      }\n      else if (operator !== \"-\") {\n        this.display = \"0\" \n        this.operator = operator\n      }\n      else if (operator === \"-\" && this.operator === \"=\") {\n        this.operator = operator\n      }\n      console.log(operator)    \n    }\n    else if (this.operator) {\n      const result = this.calculate(this.firstOperand, input, this.operator)\n      this.display = String(result)\n      this.firstOperand = result\n      this.operator = operator\n    }  \n    this.waitingForSecondOperand = true\n    console.log(\"firstOperand:\", this.firstOperand)\n    console.log(\"operator:\", this.operator)\n    console.log(\"waitingForSecondOperand:\", this.waitingForSecondOperand)\n  }\n\n  inputDecimal() {\n    if (!this.display.includes(\".\")) {\n      this.display += \".\"\n    }\n    if (this.waitingForSecondOperand === true) {\n      this.display = \"0.\"\n      this.waitingForSecondOperand = false\n    }\n  }\n\n  handleClick(event) {\n\n    switch (event.target.className) {\n      case \"digit\":\n        this.inputDigit(event.target.innerHTML)\n        this.updateDisplay()\n      break;\n\n      case \"decimal\":\n        this.inputDecimal(\".\")\n        this.updateDisplay()\n      break;\n\n      case \"operator\":\n        this.inputOperator(event.target.innerHTML)\n        this.updateDisplay()\n      break;\n\n      case \"clear\":\n          this.display = \"0\"\n          this.firstOperand = \"0\"\n          this.operator = null\n          this.updateDisplay()\n      break;\n\n      default:\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div id=\"title\">Calculator</div>\n        <Display \n          display={this.state.display}\n        />\n        <Buttons handleClick={this.handleClick} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}